{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prev","type","value","onChange","target","getGifs","query","a","limit","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","category","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACC,sBAAMC,SATc,SAACC,GACrBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKf,SACC,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdd,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5BV,EAAcU,EAAOF,a,uBCNVG,EAAO,uCAAG,WAAOC,GAAP,qCAAAC,EAAA,6DAAcC,EAAd,+BAAsB,EACnCC,EADa,gDACkCC,UAAUJ,GAD5C,kBAC4DE,EAD5D,sDAEIG,MAAMF,GAFV,cAEbG,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAa,IAAXL,EAAU,EAAVA,IAC7B,OACC,sBAAKM,UAAU,2DAAf,UACC,qBAAKC,IAAKP,EAAIR,IAAKgB,IAAKR,EAAIE,QAC5B,kCAAKF,EAAIE,MAAT,WCFUO,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,ECF2B,SAACA,GAC5B,MAA0BnC,mBAAS,CAClCsB,KAAM,GACNc,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACT1B,EAAQsB,GAAUK,MAAK,SAACC,GACvBH,EAAS,CACRhB,KAAMmB,EACNL,SAAS,SAGT,CAACD,IAEGE,EDb2BK,CAAaP,GAAjCP,EAAd,EAAQN,KAAcc,EAAtB,EAAsBA,QAEtB,OACC,sBAAKL,UAAU,mDAAf,UACC,6BAAKI,IACJC,GAAW,mBAAGL,UAAU,sDAAb,wBACZ,oBAAIA,UAAU,iBAAd,SACEH,EAAOJ,KAAI,SAACC,GACZ,OAAO,cAAC,EAAD,CAA0BA,IAAKA,GAAbA,EAAIC,aETrBiB,EAAe,WAC3B,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACC,sBAAKgC,UAAU,MAAf,UACC,8CAEA,cAAC,EAAD,CAAahC,cAAeA,IACnB,6BACK6C,EAAWpB,KAAI,SAAAqB,GAAG,OAAI,cAAC,EAAD,CAAmBV,SAAUU,GAAfA,QAElD,2BCPHC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e35af2c8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nexport const AddCategory = ({ setCategories }) => {\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst handleInputChange = ({ target }) => {\n\t\tsetInputValue(target.value);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (inputValue.trim().length > 2) {\n\t\t\tsetCategories((prev) => [inputValue, ...prev]);\n\t\t\tsetInputValue('');\n\t\t}\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input type=\"text\" value={inputValue} onChange={handleInputChange} />\n\t\t</form>\n\t);\n};\n\nAddCategory.propTypes = {\n\tsetCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (query, limit = 5) => {\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(query)}&limit=${limit}&api_key=viy2ehIQQAC13oaWvB3YN0GjHOS45JUD`;\n    const response = await fetch(url);\n    const { data } = await response.json();\n\n    const gifs = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        };\n    });\n    \n    return gifs;\n};","import React from 'react';\n\nexport const GifGridItem = ({ img }) => {\n\treturn (\n\t\t<div className=\"card animate__animated animate__fadeIn animate__delay-1s\">\n\t\t\t<img src={img.url} alt={img.title} />\n\t\t\t<p> {img.title} </p>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\tconst { data: images, loading } = useFetchGifs(category);\n\n\treturn (\n\t\t<div className=\"gif-grid animate__animated animate__bounceInDown\">\n\t\t\t<h3>{category}</h3>\n\t\t\t{loading && <p className=\"animate__animated animate__fadeIn animate__infinite\">Loading...</p>}\n\t\t\t<ul className=\"gifs-container\">\n\t\t\t\t{images.map((img) => {\n\t\t\t\t\treturn <GifGridItem key={img.id} img={img} />;\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true,\n\t});\n\n\tuseEffect(() => {\n\t\tgetGifs(category).then((imgs) => {\n\t\t\tsetState({\n\t\t\t\tdata: imgs,\n\t\t\t\tloading: false,\n\t\t\t});\n\t\t});\n\t}, [category]);\n\n\treturn state;\n};\n","import React, { useState } from 'react';\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\nexport const GifExpertApp = () => {\n\tconst [categories, setCategories] = useState(['One Punch']);\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<h2>GifExpertApp</h2>\n\t\t\t\n\t\t\t<AddCategory setCategories={setCategories}/>\n            <ul>\n                {categories.map(cat => <GifGrid key={cat} category={cat}/>)}\n            </ul>\n\t\t\t<hr />\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { GifExpertApp } from './components/GifExpertApp';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}